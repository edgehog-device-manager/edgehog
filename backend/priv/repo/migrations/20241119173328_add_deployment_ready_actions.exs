#
# This file is part of Edgehog.
#
# Copyright 2024 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

defmodule Edgehog.Repo.Migrations.AddDeploymentReadyActions do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:deployment_ready_actions, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :action_type, :text, null: false

      add :tenant_id,
          references(:tenants,
            column: :tenant_id,
            name: "deployment_ready_actions_tenant_id_fkey",
            type: :bigint,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false

      add :deployment_id,
          references(:application_deployments,
            column: :id,
            name: "deployment_ready_actions_deployment_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :upgrade_deployment_id, :uuid
    end

    create index(:deployment_ready_actions, [:tenant_id])

    create index(:deployment_ready_actions, [:id, :tenant_id], unique: true)

    create table(:deployment_ready_action_upgrades, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:deployment_ready_actions) do
      modify :upgrade_deployment_id,
             references(:deployment_ready_action_upgrades,
               column: :id,
               name: "deployment_ready_actions_upgrade_deployment_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:deployment_ready_action_upgrades) do
      add :tenant_id,
          references(:tenants,
            column: :tenant_id,
            name: "deployment_ready_action_upgrades_tenant_id_fkey",
            type: :bigint,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false

      add :upgrade_target_id,
          references(:application_deployments,
            column: :id,
            name: "deployment_ready_action_upgrades_upgrade_target_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create index(:deployment_ready_action_upgrades, [:tenant_id])

    create index(:deployment_ready_action_upgrades, [:id, :tenant_id], unique: true)
  end

  def down do
    drop constraint(
           :deployment_ready_action_upgrades,
           "deployment_ready_action_upgrades_tenant_id_fkey"
         )

    drop constraint(
           :deployment_ready_action_upgrades,
           "deployment_ready_action_upgrades_upgrade_target_id_fkey"
         )

    drop_if_exists index(:deployment_ready_action_upgrades, [:id, :tenant_id])

    drop_if_exists index(:deployment_ready_action_upgrades, [:tenant_id])

    alter table(:deployment_ready_action_upgrades) do
      remove :upgrade_target_id
      remove :tenant_id
    end

    drop constraint(
           :deployment_ready_actions,
           "deployment_ready_actions_upgrade_deployment_id_fkey"
         )

    alter table(:deployment_ready_actions) do
      modify :upgrade_deployment_id, :uuid
    end

    drop table(:deployment_ready_action_upgrades)

    drop constraint(:deployment_ready_actions, "deployment_ready_actions_tenant_id_fkey")

    drop constraint(:deployment_ready_actions, "deployment_ready_actions_deployment_id_fkey")

    drop_if_exists index(:deployment_ready_actions, [:id, :tenant_id])

    drop_if_exists index(:deployment_ready_actions, [:tenant_id])

    drop table(:deployment_ready_actions)
  end
end
