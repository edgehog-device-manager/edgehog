#
# This file is part of Edgehog.
#
# Copyright 2025 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

defmodule Edgehog.Repo.Migrations.UpdateChannelToChannel do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:channels, primary_key: false) do
      add :id, :bigserial, null: false, primary_key: true
      add :handle, :text, null: false
      add :name, :text, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :tenant_id,
          references(:tenants,
            column: :tenant_id,
            name: "channels_tenant_id_fkey",
            type: :bigint,
            prefix: "public",
            on_delete: :delete_all
          ),
          null: false
    end

    create index(:channels, [:tenant_id])

    create index(:channels, [:id, :tenant_id], unique: true)

    create unique_index(:channels, [:tenant_id, :handle], name: "channels_handle_index")

    create unique_index(:channels, [:tenant_id, :name], name: "channels_name_index")

    drop_if_exists index(:update_campaigns, [:tenant_id, :update_channel_id])

    rename table(:update_campaigns), :update_channel_id, to: :channel_id

    drop constraint(:update_campaigns, "update_campaigns_update_channel_id_fkey")

    alter table(:update_campaigns) do
      modify :channel_id,
             references(:channels,
               column: :id,
               with: [tenant_id: :tenant_id],
               match: :full,
               name: "update_campaigns_channel_id_fkey",
               type: :bigint,
               prefix: "public",
               on_delete: :nothing
             )
    end

    create index(:update_campaigns, [:tenant_id, :channel_id])

    rename table(:device_groups), :update_channel_id, to: :channel_id

    drop constraint(:device_groups, "device_groups_update_channel_id_fkey")

    alter table(:device_groups) do
      modify :channel_id,
             references(:channels,
               column: :id,
               with: [tenant_id: :tenant_id],
               name: "device_groups_channel_id_fkey",
               type: :bigint,
               prefix: "public",
               on_delete: :nilify_all
             )
    end
  end

  def down do
    drop constraint(:device_groups, "device_groups_channel_id_fkey")

    alter table(:device_groups) do
      modify :update_channel_id,
             references(:update_channels,
               column: :id,
               with: [tenant_id: :tenant_id],
               name: "device_groups_update_channel_id_fkey",
               type: :bigint,
               prefix: "public",
               on_delete: :nilify_all
             )
    end

    rename table(:device_groups), :channel_id, to: :update_channel_id

    drop_if_exists index(:update_campaigns, [:tenant_id, :channel_id])

    drop constraint(:update_campaigns, "update_campaigns_channel_id_fkey")

    alter table(:update_campaigns) do
      modify :update_channel_id,
             references(:update_channels,
               column: :id,
               with: [tenant_id: :tenant_id],
               match: :full,
               name: "update_campaigns_update_channel_id_fkey",
               type: :bigint,
               prefix: "public",
               on_delete: :nothing
             )
    end

    rename table(:update_campaigns), :channel_id, to: :update_channel_id

    create index(:update_campaigns, [:tenant_id, :update_channel_id])

    drop_if_exists unique_index(:channels, [:tenant_id, :name], name: "channels_name_index")

    drop_if_exists unique_index(:channels, [:tenant_id, :handle], name: "channels_handle_index")

    drop constraint(:channels, "channels_tenant_id_fkey")

    drop_if_exists index(:channels, [:id, :tenant_id])

    drop_if_exists index(:channels, [:tenant_id])

    drop table(:channels)
  end
end
