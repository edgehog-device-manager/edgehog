#
# This file is part of Edgehog.
#
# Copyright 2025 SECO Mind Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

defmodule Edgehog.Repo.Migrations.AddCascadeDeleteToContainerReferences do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop constraint(
           :application_release_containers,
           "application_release_containers_release_id_fkey"
         )

    alter table(:application_release_containers) do
      modify :release_id,
             references(:application_releases,
               column: :id,
               name: "application_release_containers_release_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    drop constraint(:container_volumes, "container_volumes_container_id_fkey")

    alter table(:container_volumes) do
      modify :container_id,
             references(:containers,
               column: :id,
               name: "container_volumes_container_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end

    drop constraint(:container_networks, "container_networks_container_id_fkey")

    alter table(:container_networks) do
      modify :container_id,
             references(:containers,
               column: :id,
               name: "container_networks_container_id_fkey",
               type: :uuid,
               prefix: "public",
               on_delete: :delete_all
             )
    end
  end

  def down do
    drop constraint(:container_networks, "container_networks_container_id_fkey")

    alter table(:container_networks) do
      modify :container_id,
             references(:containers,
               column: :id,
               name: "container_networks_container_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(:container_volumes, "container_volumes_container_id_fkey")

    alter table(:container_volumes) do
      modify :container_id,
             references(:containers,
               column: :id,
               name: "container_volumes_container_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    drop constraint(
           :application_release_containers,
           "application_release_containers_release_id_fkey"
         )

    alter table(:application_release_containers) do
      modify :release_id,
             references(:application_releases,
               column: :id,
               name: "application_release_containers_release_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end
  end
end
